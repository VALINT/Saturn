/*-----------------------------------------------------------------------------------------------------------------------
 * Buttons module
 *_______________________________________________________________________________________________________________________
 *  __    __ __ __     __   _____	  ____  _   _  _____  _____  ____  __  _  _____
 *  \ \  / //  \\ \    \_\ / ___/	 | __ \| | | ||_   _||_   _|/    \|  \| |/ ___/
 *   \ \/ //    \\ \___ |/ \___ \	 | __ || |_| |  | |    | |  | || || |\  |\___ \
 *    \__//__/\__\\____\   /____/	 |____/ \___/   |_|    |_|  \____/|_| \_|/____/
 *				        _     _  ____  ____    _    ____  _   _
 *				       | |   | || __ \| |\ \  / \  | |\ \\ \_/ /
 *				       | |__ | || __ || |/ / / _ \ | |/ / \   /
 *			           |____||_||____/|_|\_\/_/ \_\|_|\_\  |_|
 *_______________________________________________________________________________________________________________________
 * Created: 30.04.2020 23:14:08
 *  Author: VAL
 *-----------------------------------------------------------------------------------------------------------------------
 */ 


#ifndef BUTTONS_H_
#define BUTTONS_H_

#include <avr/io.h>
#include <stdint.h>

#define ButtonDebounce	3
#define ButtonHoldCond  255

typedef enum State{freeSt, pushedSt, clickSt, holdSt, wasteSt} State;	// Button states list

typedef struct Button										// Button structure
{
	State	 state;
	uint8_t  *pin;
	uint8_t  number; 
	uint16_t hold_timer;
} Button;

void checkButton(Button *button);

#endif /* BUTTONS_H_ */