#ifndef _FONT_H_
#define _FONT_H_

#include "stdint.h"

const char ascii_5x7_basic_rows[95][8] = 
{
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},	//SPACE, ' '		0x20	32
	{0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x04, 0x00},	// '!'				0x21	33
	{0x0A, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, 	// '"'				0x22	34
	{0x00, 0x0A, 0x1F, 0x0A, 0x1F, 0x0A, 0x00, 0x00},	// '#'				0x23	35
	{0x04, 0x0F, 0x14, 0x0E, 0x05, 0x1E, 0x04, 0x00},	// '$'				0x24	36
	{0x18, 0x19, 0x02, 0x04, 0x08, 0x13, 0x03, 0x00},	// '%'				0x25	37
	{0x0C, 0x12, 0x12, 0x0C, 0x15, 0x12, 0x0D, 0x00},	// '&'				0x26	38
	{0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},	// '''				0x27	39
	{0x01, 0x02, 0x04, 0x04, 0x04, 0x02, 0x01, 0x00},	// '('				0x28	40
	{0x10, 0x08, 0x04, 0x04, 0x04, 0x08, 0x10, 0x00},	// ')'				0x29	41
	{0x0E, 0x04, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00},	// '*'				0x2A	42
	{0x00, 0x04, 0x04, 0x1F, 0x04, 0x04, 0x00, 0x00},	// '+'				0x2B	43
	{0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x04, 0x00},	// ','				0x2C	44
	{0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00},	// '-'				0x2D	45
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00},	// '.'				0x2E	46
	{0x02, 0x02, 0x04, 0x04, 0x04, 0x08, 0x08, 0x00},	// '/'				0x2F	47
	{0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E, 0x00},	// '0'				0x30	48
	{0x04, 0x0C, 0x04, 0x04, 0x04, 0x04, 0x0E, 0x00},	// '1'				0x31	49
	{0x0E, 0x11, 0x01, 0x0E, 0x10, 0x10, 0x1F, 0x00},	// '2'				0x32	50
	{0x0E, 0x11, 0x01, 0x02, 0x01, 0x11, 0x0E, 0x00},	// '3'				0x33	51
	{0x02, 0x06, 0x0A, 0x1F, 0x02, 0x02, 0x02, 0x00},	// '4'				0x34	52
	{0x1F, 0x10, 0x1E, 0x01, 0x01, 0x11, 0x0E, 0x00},	// '5'				0x35	53
	{0x0E, 0x10, 0x10, 0x1E, 0x11, 0x11, 0x0E, 0x00},	// '6'				0x36	54
	{0x1F, 0x01, 0x02, 0x04, 0x04, 0x04, 0x04, 0x00},	// '7'				0x37	55
	{0x0E, 0x11, 0x0E, 0x11, 0x11, 0x11, 0x0E, 0x00},	// '8'				0x38	56
	{0x0E, 0x11, 0x11, 0x0F, 0x01, 0x01, 0x0E, 0x00},	// '9'				0x39	57
	{0x00, 0x06, 0x06, 0x00, 0x06, 0x06, 0x00, 0x00},	// ':'				0x3A	58
	{0x00, 0x06, 0x06, 0x00, 0x06, 0x06, 0x04, 0x00},	// ';'				0x3B	59
	{0x02, 0x04, 0x08, 0x10, 0x08, 0x04, 0x02, 0x00},	// '<'				0x3C	60
	{0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x00},	// '='				0x3D	61
	{0x08, 0x04, 0x02, 0x01, 0x02, 0x04, 0x08, 0x00},	// '>'				0x3E	62
	{0x0E, 0x11, 0x11, 0x02, 0x04, 0x00, 0x04, 0x00},	// '?'				0x3F	63
	{0x0E, 0x11, 0x01, 0x0D, 0x15, 0x15, 0x0E, 0x00},	// '@'				0x40	64
	{0x04, 0x0A, 0x11, 0x1F, 0x11, 0x11, 0x11, 0x00},	// 'A'				0x41	65
	{0x1E, 0x11, 0x11, 0x1E, 0x11, 0x11, 0x1E, 0x00},	// 'B'				0x42	66
	{0x0E, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0E, 0x00},	// 'C'				0x43	67
	{0x1C, 0x12, 0x11, 0x11, 0x11, 0x12, 0x1C, 0x00},	// 'D'				0x44	68
	{0x1F, 0x10, 0x10, 0x1E, 0x10, 0x10, 0x1F, 0x00},	// 'E'				0x45	69
	{0x1F, 0x10, 0x10, 0x1E, 0x10, 0x10, 0x10, 0x00},	// 'F'				0x46	70
	{0x0E, 0x11, 0x10, 0x17, 0x11, 0x11, 0x0E, 0x00},	// 'G'				0x47	71
	{0x11, 0x11, 0x11, 0x1F, 0x11, 0x11, 0x11, 0x00},	// 'H'				0x48	72
	{0x0E, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0E, 0x00},	// 'I'				0x49	73
	{0x07, 0x02, 0x02, 0x02, 0x02, 0x12, 0x0C, 0x00},	// 'J'				0x4A	74
	{0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11, 0x00},	// 'K'				0x4B	75
	{0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1F, 0x00},	// 'L'				0x4C	76
	{0x11, 0x1B, 0x15, 0x11, 0x11, 0x11, 0x11, 0x00},	// 'M'				0x4D	77
	{0x11, 0x11, 0x19, 0x15, 0x13, 0x11, 0x11, 0x00},	// 'N'				0x4E	78
	{0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E, 0x00},	// 'O'				0x4F	79
	{0x1E, 0x11, 0x11, 0x1E, 0x10, 0x10, 0x10, 0x00},	// 'P'				0x50	80
	{0x0E, 0x11, 0x11, 0x11, 0x15, 0x12, 0x0D, 0x00},	// 'Q'				0x51	81
	{0x1E, 0x11, 0x11, 0x1E, 0x14, 0x12, 0x11, 0x00},	// 'R'				0x52	82
	{0x0F, 0x10, 0x10, 0x0E, 0x01, 0x01, 0x1E, 0x00},	// 'S'				0x53	83
	{0x1F, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00},	// 'T'				0x54	84
	{0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E, 0x00},	// 'U'				0x55	85
	{0x11, 0x11, 0x11, 0x11, 0x11, 0x0A, 0x04, 0x00},	// 'V'				0x56	86
	{0x11, 0x11, 0x11, 0x15, 0x15, 0x15, 0x0A, 0x00},	// 'W'				0x57	87
	{0x11, 0x11, 0x0A, 0x04, 0x0A, 0x11, 0x11, 0x00},	// 'X'				0x58	88
	{0x11, 0x11, 0x0A, 0x04, 0x04, 0x04, 0x04, 0x00},	// 'Y'				0x59	89
	{0x1F, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1F, 0x00},	// 'Z'				0x5A	90
	{0x06, 0x04, 0x04, 0x04, 0x04, 0x04, 0x06, 0x00},	// '['				0x5B	91
	{0x00, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x00},	// '\'				0x5C	92
	{0x0C, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0C, 0x00},	// ']'				0x5D	93
	{0x04, 0x0A, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00},	// '^'				0x5E	94
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00},	// '_'				0x5F	95
	{0x08, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00},	// '`'				0x60	96
	{0x00, 0x00, 0x0E, 0x01, 0x0F, 0x11, 0x0F, 0x00},	// 'a'				0x61	97
	{0x10, 0x10, 0x16, 0x19, 0x11, 0x11, 0x1E, 0x00},	// 'b'				0x62	98
	{0x00, 0x00, 0x0E, 0x10, 0x10, 0x11, 0x0E, 0x00},	// 'c'				0x63	99
	{0x01, 0x01, 0x0D, 0x13, 0x11, 0x11, 0x0F, 0x00},	// 'd'				0x64	100
	{0x00, 0x00, 0x0E, 0x11, 0x1F, 0x10, 0x0E, 0x00},	// 'e'				0x65	101
	{0x06, 0x09, 0x08, 0x1C, 0x08, 0x08, 0x08, 0x00},	// 'f'				0x66	102
	{0x00, 0x0F, 0x11, 0x11, 0x0F, 0x01, 0x0E, 0x00},	// 'g'				0x67	103
	{0x10, 0x10, 0x16, 0x19, 0x11, 0x11, 0x11, 0x00},	// 'h'				0x68	104
	{0x04, 0x00, 0x0C, 0x04, 0x04, 0x04, 0x0E, 0x00},	// 'i'				0x69	105
	{0x02, 0x00, 0x06, 0x02, 0x12, 0x12, 0x0C, 0x00},	// 'j'				0x6A	106
	{0x10, 0x10, 0x12, 0x14, 0x18, 0x14, 0x12, 0x00},	// 'k'				0x6B	107
	{0x0C, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0E, 0x00},	// 'l'				0x6C	108
	{0x00, 0x00, 0x1A, 0x15, 0x15, 0x15, 0x15, 0x00},	// 'm'				0x6D	109
	{0x00, 0x00, 0x16, 0x19, 0x11, 0x11, 0x11, 0x00},	// 'n'				0x6E	110
	{0x00, 0x00, 0x0E, 0x11, 0x11, 0x11, 0x0E, 0x00},	// 'o'				0x6F	111
	{0x00, 0x00, 0x1E, 0x11, 0x1E, 0x10, 0x10, 0x00},	// 'p'				0x70	112
	{0x00, 0x00, 0x0D, 0x13, 0x0F, 0x01, 0x01, 0x00},	// 'q'				0x71	113
	{0x00, 0x00, 0x16, 0x19, 0x10, 0x10, 0x10, 0x00},	// 'r'				0x72	114
	{0x00, 0x00, 0x0E, 0x10, 0x0E, 0x01, 0x1E, 0x00},	// 's'				0x73	115
	{0x08, 0x08, 0x08, 0x1C, 0x08, 0x09, 0x06, 0x00},	// 't'				0x74	116
	{0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0D, 0x00},	// 'u'				0x75	117
	{0x00, 0x00, 0x11, 0x11, 0x11, 0x0A, 0x04, 0x00},	// 'v'				0x76	118
	{0x00, 0x00, 0x11, 0x15, 0x15, 0x15, 0x0A, 0x00},	// 'w'				0x77	119
	{0x00, 0x00, 0x11, 0x0A, 0x04, 0x0A, 0x11, 0x00},	// 'x'				0x78	120
	{0x00, 0x00, 0x11, 0x11, 0x0F, 0x01, 0x0E, 0x00},	// 'y'				0x79	121
	{0x00, 0x00, 0x1F, 0x02, 0x04, 0x08, 0x1F, 0x00},	// 'z'				0x7A	122
	{0x02, 0x04, 0x04, 0x08, 0x04, 0x04, 0x02, 0x00},	// '{'				0x7B	123
	{0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00},	// '|'				0x7C	124
	{0x08, 0x04, 0x04, 0x02, 0x04, 0x04, 0x08, 0x00},	// '}'				0x7D	125
	{0x00, 0x00, 0x08, 0x15, 0x02, 0x00, 0x00, 0x00},	// '~'				0x7E	126
};

const char digits_8x5[10][8] = {
	//8x5 font 0 - 9
	{0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E},	// 0
	{0x04, 0x0C, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0E},	// 1
	{0x0E, 0x11, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1F},	// 2
	{0x0E, 0x11, 0x01, 0x02, 0x01, 0x01, 0x11, 0x0E},	// 3
	{0x02, 0x06, 0x0A, 0x12, 0x1F, 0x02, 0x02, 0x02},	// 4
	{0x1F, 0x10, 0x10, 0x1E, 0x01, 0x01, 0x11, 0x0E},	// 5
	{0x0E, 0x10, 0x10, 0x1E, 0x11, 0x11, 0x11, 0x0E},	// 6
	{0x1F, 0x01, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04},	// 7
	{0x0E, 0x11, 0x11, 0x0E, 0x11, 0x11, 0x11, 0x0E},	// 8
	{0x0E, 0x11, 0x11, 0x11, 0x0F, 0x01, 0x01, 0x0E},	// 9
};

const char digits_7x5[10][8] = {
	// 7x5 font 0 - 9
	{0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E, 0x00},	// '0'				0x30	48
	{0x04, 0x0C, 0x04, 0x04, 0x04, 0x04, 0x0E, 0x00},	// '1'				0x31	49
	{0x0E, 0x11, 0x01, 0x0E, 0x10, 0x10, 0x1F, 0x00},	// '2'				0x32	50
	{0x0E, 0x11, 0x01, 0x02, 0x01, 0x11, 0x0E, 0x00},	// '3'				0x33	51
	{0x02, 0x06, 0x0A, 0x1F, 0x02, 0x02, 0x02, 0x00},	// '4'				0x34	52
	{0x1F, 0x10, 0x1E, 0x01, 0x01, 0x11, 0x0E, 0x00},	// '5'				0x35	53
	{0x0E, 0x10, 0x10, 0x1E, 0x11, 0x11, 0x0E, 0x00},	// '6'				0x36	54
	{0x1F, 0x01, 0x02, 0x04, 0x04, 0x04, 0x04, 0x00},	// '7'				0x37	55
	{0x0E, 0x11, 0x0E, 0x11, 0x11, 0x11, 0x0E, 0x00},	// '8'				0x38	56
	{0x0E, 0x11, 0x11, 0x0F, 0x01, 0x01, 0x0E, 0x00},	// '9'				0x39	57
};

const char digits_6x3[10][8] = {
	// 6x3 font 0 - 9
	{0x00, 0x0E, 0x0A, 0x0A, 0x0A, 0x0A, 0x0E, 0x00},	//0
	{0x00, 0x04, 0x0C, 0x04, 0x04, 0x04, 0x0E, 0x00},	//1
	{0x00, 0x0E, 0x0A, 0x02, 0x04, 0x08, 0x0E, 0x00},	//2
	{0x00, 0x0E, 0x02, 0x04, 0x02, 0x0A, 0x0E, 0x00},	//3
	{0x00, 0x0A, 0x0A, 0x0E, 0x02, 0x02, 0x02, 0x00},	//4
	{0x00, 0x0E, 0x08, 0x0E, 0x02, 0x02, 0x0E, 0x00},	//5
	{0x00, 0x0E, 0x08, 0x0E, 0x0A, 0x0A, 0x0E, 0x00},	//6
	{0x00, 0x0E, 0x02, 0x02, 0x04, 0x04, 0x04, 0x00},	//7
	{0x00, 0x0E, 0x0A, 0x0E, 0x0A, 0x0A, 0x0E, 0x00},	//8
	{0x00, 0x0E, 0x0A, 0x0E, 0x02, 0x02, 0x0E, 0x00},	//9
};

const char digits_6x4[10][8] = {
	// 6x4 font 0 - 9
	{0x00, 0x0C, 0x12, 0x12, 0x12, 0x12, 0x0C, 0x00},	//0
	{0x00, 0x04, 0x0C, 0x04, 0x04, 0x04, 0x0E, 0x00},	//1
	{0x00, 0x0C, 0x12, 0x02, 0x0C, 0x10, 0x1E, 0x00},	//2
	{0x00, 0x0C, 0x12, 0x04, 0x02, 0x12, 0x0C, 0x00},	//3
	{0x00, 0x06, 0x0A, 0x12, 0x1E, 0x02, 0x02, 0x00},	//4
	{0x00, 0x1E, 0x10, 0x1C, 0x02, 0x02, 0x1C, 0x00},	//5
	{0x00, 0x0C, 0x10, 0x1C, 0x12, 0x12, 0x0C, 0x00},	//6
	{0x00, 0x1E, 0x02, 0x04, 0x04, 0x04, 0x04, 0x00},	//7
	{0x00, 0x0C, 0x12, 0x0C, 0x12, 0x12, 0x0C, 0x00},	//8
	{0x00, 0x0C, 0x12, 0x0E, 0x02, 0x12, 0x0C, 0x00},	//9
};

const char *digits[] = {
	&digits_8x5[0][0],
	&digits_7x5[0][0],
	&digits_6x4[0][0],
	&digits_6x3[0][0]
};
	
#endif
